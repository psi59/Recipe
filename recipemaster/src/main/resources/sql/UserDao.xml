<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.recipe.dao.UserDao">

	<resultMap type="user" id="userMap">
		<id column="uno" property="userNo" />
		<result column="name" property="userName" />
		<result column="email" property="email" />
		<result column="pwd" property="password" />
		<result column="img" property="image" />
		<result column="intro" property="intro" />
		<result column="role" property="role" />
		<result column="join_dt" property="joinDate" />
		<result column="rcp_url" property="recipeUrl" />
		<result column="rcpCount" property="recipeCount"/>
		<result column="rownum" property="rownum"/>
	</resultMap>

	<select id="findUser" resultMap="userMap" parameterType="String">
		SELECT * 
		FROM users	
		WHERE email=#{value}
	</select>

	<select id="selectList" resultMap="userMap" parameterType="Map">
		SELECT @rownum:=@rownum+1 rownum,vt.*
    FROM(
        select * from
    (SELECT u.uno, u.name, u.email, u.pwd, u.img, u.intro, u.role, u.join_dt, u.rcp_url, rcpCount   
    FROM users u , 
        (SELECT lk.uno,COUNT(lk.rcpno) rcpCount from rcps lk group by lk.uno) c
        where u.uno = c.uno) a
    INNER JOIN(select @rownum:=0) t   
    ORDER BY rcpCount desc
    LIMIT #{startIndex}, #{len}) vt
	</select>

	<select id="selectOne" resultMap="userMap" parameterType="int">
		select
		u.uno, u.name, u.email, u.pwd, u.img, u.intro, u.role, u.join_dt,
		u.rcp_url, count(*) rcp_cnt
		from users u inner join rcps r on u.uno =
		r.uno
		where u.uno = #{no}
	</select>

  <select id="selectFromEmail" resultMap="userMap" parameterType="string">
  SELECT * FROM users WHERE email = '${value}'
  </select>
  

	<select id="checkDuplication" resultMap="userMap" parameterType="String">
		select uno, name, email, pwd, img, intro, role, join_dt, rcp_url
		from
		users
		where email = #{email}
	</select>

	<select id="checkDuplicationUserName" resultMap="userMap"
		parameterType="String">
		select uno, name, email, pwd, img, intro, role, join_dt,
		rcp_url
		from users
		where name = #{userName}
	</select>

	<insert id="insert" parameterType="user">
		insert into users(name, email, pwd, role, join_dt)
		values ( #{userName}, #{email}, #{password}, 'user', now())
	</insert>
	
	<update  id="update" parameterType="user" >
      UPDATE users
      <set>
        pwd = #{password},
        intro = #{intro},
        img = #{image}
      </set>
      WHERE email = #{email}
   </update>


</mapper>