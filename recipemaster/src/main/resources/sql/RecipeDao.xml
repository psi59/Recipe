<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.recipe.dao.RecipeDao">
	
	<resultMap type="recipe" id="recipeMap">
		<id column="rcpno" property="recipeNo" />
		<result column="uno" property="userNo" />
		<result column="name" property="recipeName" />
		<result column="intro" property="intro" />
		<result column="rcp_pd" property="recipeDetail"/>
		<result column="c_time" property="cookTime" />
		<result column="ptn" property="portion" />
		<result column="rcp_dt" property="recipeDate" />
		<result column="hits" property="hits" />
		<result column="rgst" property="regiStatus" />
		<result column="gpa" property="gradePoint"/>
		<result column="userName" property="user.userName"/>
		<result column="lc_dt" property="likeDate"/>
		<result column="likeUser" property="likeUser"/>
		<result column="countLike" property="countLike"/>		
		<result column="uno2" property="subscribeNum"/>
		<result column="countComment" property="countComment"/>
		<result column="countScrap" property="countScrap"/>
		<result column="scrapUser" property="scrapUser"/>
		<result column="email" property="user.email"/>
		<result column="rownum" property="rownum"/>
		<result column="totalPoint" property="totalPoint"/>
		<result column="rpimg" property="rpimg" />
		<result column="img" property="user.image"/>
	</resultMap> 
	
	<resultMap type="material" id="materialMap">
    <id column="mtno" property="materialNo" />
    <result column="name" property="materialName" />
    <result column="mtst" property="materialStatement" />
  </resultMap>
  
  
   
  <select id="recipeSearch" resultMap="recipeMap" parameterType="Map">
    SELECT r.rcpno, r.uno, r.name, r.intro, r.c_time, r.ptn, r.rcp_dt, r.hits,
           r.rgst, truncate(r.gpa,1) gpa, u.uno, u.name userName, l.rcpno, l.lc_dt, l.uno likeUser
    FROM users u INNER JOIN rcps r on u.uno=r.uno
         LEFT OUTER JOIN rcp_lik l ON r.rcpno=l.rcpno and l.uno=#{userNo}      
    <if test="search.searchCondition == 'recipe'">
      WHERE r.name LIKE '%${search.searchKeyword}%'
    </if>
    <if test="search.searchCondition == 'chef'">
      WHERE u.name LIKE '%${search.searchKeyword}%'
    </if>
    <if test="search.sortCondition == 'newest' and search.orderCondition == 'DESC'">
      ORDER BY r.rcpno DESC
    </if>
    <if test="search.sortCondition == 'newest' and search.orderCondition == 'ASC'">
      ORDER BY r.rcpno ASC
    </if>
    <if test="search.sortCondition == 'grade' and search.orderCondition == 'DESC'">
      ORDER BY r.gpa DESC
    </if>
    <if test="search.sortCondition == 'grade' and search.orderCondition == 'ASC'">
      ORDER BY r.gpa ASC
    </if>
    limit #{startIndex}, #{len}
  </select>
  
  <select id="recipeCount" resultType="int" parameterType="Map">
    SELECT count(*)
    FROM users u INNER JOIN rcps r on u.uno=r.uno
         LEFT OUTER JOIN rcp_lik l ON r.rcpno=l.rcpno and l.uno=#{userNo}      
    <if test="search.searchCondition == 'recipe'">
      WHERE r.name LIKE '%${search.searchKeyword}%'
    </if>
    <if test="search.searchCondition == 'chef'">
      WHERE u.name LIKE '%${search.searchKeyword}%'
    </if>
    <if test="search.sortCondition == 'newest' and search.orderCondition == 'DESC'">
      ORDER BY r.rcpno DESC
    </if>
    <if test="search.sortCondition == 'newest' and search.orderCondition == 'ASC'">
      ORDER BY r.rcpno ASC
    </if>
    <if test="search.sortCondition == 'grade' and search.orderCondition == 'DESC'">
      ORDER BY r.gpa DESC
    </if>
    <if test="search.sortCondition == 'grade' and search.orderCondition == 'ASC'">
      ORDER BY r.gpa ASC
    </if>
    limit #{startIndex}, #{len}
  </select>
  
  <select id="selectRecipeName" parameterType="String" resultType="String">
	SELECT name
	FROM rcps
	WHERE name LIKE '${value}%'
	ORDER BY LENGTH(name) ASC;
  </select>
	
	<insert id="likeUp" parameterType="Recipe">
	INSERT INTO RCP_LIK (UNO,RCPNO,LC_DT)
	VALUES (${userNo}, ${recipeNo}, now())
	
	</insert>
	
  <insert id="addScrap" parameterType="Map">
     INSERT INTO rcp_scr 
     VALUES ( ${userNo}, ${recipeNo}, now() )
  </insert>
  
    <delete id="deleteScrap" parameterType="Map">
		  DELETE FROM
		  rcp_scr WHERE uno=${userNo} and rcpno=${recipeNo}
  </delete>
	
	<insert id="likeDown" parameterType="Recipe">
  DELETE FROM
  rcp_lik WHERE uno=${userNo} and rcpno=${recipeNo}
  </insert>
	
	<insert id="insert" parameterType="map">
		 INSERT INTO rcps(uno, name, intro, c_time, ptn, rcp_pd, rpimg, rcp_dt, rgst) 
		 VALUES(#{user.userNo}, #{recipe.recipeName}, #{recipe.intro}, #{recipe.cookTime}, #{recipe.portion}, 'rcp_pd', 'rpimg', now(), 1)
		 <selectKey keyProperty="recipeNo" resultType="int" order="AFTER">
            SELECT LAST_INSERT_ID();
     </selectKey>		 	 
	</insert>
	
	<insert id="insertMaterials" parameterType="map">
        insert into rcp_mt(rcpno, mtno, rcpqt)
        values <!-- (#{recipeNo}, #{materialName}, #{materialAmount}) -->
        <foreach collection="materialList" item="item" separator=" , ">
            (#{recipeNo}, #{item.materialNo}, #{item.materialAmount})
        </foreach>
  </insert>
  
  <update id="insertImageAndProduce" parameterType="map">
    UPDATE rcps 
    SET rcp_pd=#{recipeProduceDatas}, rpimg=#{recipeRepresentImages}
    WHERE rcpno=#{recipeNo};
  </update>
  
  
  <insert id="addSubscribe" parameterType="Map">
  INSERT INTO scs(uno, uno2, sc_dt)
  values(${toUserNo}, ${fromUserNo}, now() )
  </insert>
    
    <delete id="deleteSubscribe" parameterType="Map">
    DELETE from scs where $(fromUserNo)
    </delete>
    
  <select id="selectSubscribeUno" resultMap="recipeMap" parameterType="INTEGER">
    SELECT * FROM scs WHERE uno=#{value}
  </select>
  
  <select id="selectSbuscribe" resultMap="recipeMap" parameterType="string">
	SELECT *
	FROM rcps
	WHERE uno in( ${userNo} )
	order by rcp_dt desc
	limit #{startIndex}, #{len}
  </select>
  
  <select id="selectMypage" resultMap="recipeMap" parameterType="INTEGER">
		SELECT *,
		(SELECT count(uno) FROM scs WHERE uno = ${value}) scsCountUser
		FROM rcps r
		INNER JOIN users u ON r.uno=u.uno AND u.uno =${value}
  </select>
  
  <select id="selectScrapUserNoMypage" resultMap="recipeMap" parameterType="INTEGER">
    select * from rcp_scr where uno = ${value}
  </select>
  

  <select id="selectScrapMypage" resultMap="recipeMap" parameterType="map">
			select * from rcps r
			INNER JOIN users u on r.uno=u.uno and r.rcpno in ( ${userNumbers} )
			LEFT OUTER JOIN rcp_scr scr on r.rcpno=scr.rcpno and scr.uno = ${userNo}
			ORDER BY scr.scc_dt asc
  </select>
  
<select id="selectSubscribe2" resultMap="recipeMap" parameterType="string">
  
  SELECT * 
  FROM rcps 
  WHERE uno = ${userNo}
  order by uno desc
  limit #{startIndex}, #{len}
  </select>

<!--   <select id="recipeList" resultMap="recipeMap" parameterType="Map">
    SELECT @rownum:=@rownum+1 rownum,r.rcpno, r.uno, r.name, r.intro, r.c_time, r.ptn, r.rcp_dt, r.hits,
    r.rgst, r.gpa, u.uno, u.name userName, u.email,l.rcpno, l.lc_dt, l.uno likeUser,
    (select count(uno) from rcp_lik where uno = ${userNo}) as countLike
    FROM (users u INNER JOIN rcps r on u.uno=r.uno)
    INNER JOIN(select @rownum:=0) t
    LEFT OUTER JOIN rcp_lik l ON r.rcpno=l.rcpno and l.uno=${userNo}
    ORDER BY r.hits desc
    limit #{len}
  </select> -->
    
  <select id="recipeList" resultMap="recipeMap" parameterType="Map">
    SELECT @rownum:=@rownum+1 rownum,vt.* 
    FROM (SELECT r.rcpno rcpno, r.uno uno, r.name, r.intro, r.c_time,r.rpimg,  r.ptn, r.rcp_dt, r.hits,
    r.rgst, r.gpa, u.uno userNo, u.img, u.name userName, u.email,l.rcpno likeRecipe, l.lc_dt, l.uno likeUser,
    (select count(lk.uno) from rcp_lik lk where lk.uno = ${userNo}) as countLike
    FROM users u
    INNER JOIN rcps r on u.uno=r.uno
    INNER JOIN(select @rownum:=0) t
    LEFT OUTER JOIN rcp_lik l ON r.rcpno=l.rcpno and l.uno=${userNo}
   <if test="request == 1">
    ORDER BY r.hits desc
    </if>
    <if test="request == 2">
    ORDER BY r.rcp_dt desc
    </if>
    limit #{len}
    ) vt
  </select>
  
   
  <select id="selectMts" resultMap="materialMap" parameterType="INTEGER">
  
       select * from mts m, rcp_mt mt, rcps r 
       where m.mtno=mt.mtno and r.rcpno = mt.rcpno and r.rcpno =${value}
  </select>
  
  <select id="selectOne" resultMap="recipeMap" parameterType="INTEGER">
    SELECT DISTINCT r.rcpno, r.uno, r.name, r.intro, r.c_time, r.ptn, r.rcp_dt, r.hits,
     r.rgst, r.gpa,r.rcp_pd, u.uno, u.name userName,s.uno scrapUser, s.rcpno,
    (select count(rcpno) from rcp_lik where rcpno=${recipeNo}) countLike,
    (select count(rrpno) from rcp_rp where rcpno=${recipeNo}) countComment,
    (select count(rcpno) from rcp_scr where rcpno=${recipeNo}) countScrap
    FROM users u INNER JOIN rcps r on u.uno=r.uno and r.rcpno=${recipeNo}
    LEFT OUTER JOIN rcp_lik l ON r.rcpno=l.rcpno
    LEFT OUTER JOIN rcp_scr s ON r.rcpno=s.rcpno and s.uno=${userNo}
  </select>
	
	<select id="selectMaterialName" resultMap="materialMap" parameterType="string">
    SELECT * 
    FROM mts
    WHERE name LIKE '%${value}%'
    ORDER BY mtno
  </select>
  
  <update id="updateHits" parameterType="recipe">
  UPDATE rcps set hits=${hits} where rcpno=${recipeNo};
  </update>
	
	<!-- 
	<select id="selectOne" resultMap="boardMap" parameterType="int">
    select bno, title, content, cre_dt, view_cnt  
    from boards
    where bno=#{value}
  </select>
	
	<insert id="insert" parameterType="board">
	 insert into boards(title, content, cre_dt)
	 values(#{title}, #{content}, now())
	</insert>
	
	<update id="update" parameterType="board">
   update boards set
    title=#{title},
    content=#{content},
    cre_dt=now()
   where bno=#{no}
  </update>
  
  <delete id="delete" parameterType="int">
    delete from boards
    where bno=#{no}
  </delete> -->
  

</mapper>